{"version":3,"sources":["components/Floor.js","components/LiftContainer.js","App.js","index.js"],"names":["Floor","props","lifts","i","noOfLifts","push","id","className","document","documentElement","style","setProperty","floorNo","first","onClick","setTimeout","downClicked","last","upClicked","LiftContainer","floors","liftRecord","liftMoving","useEffect","getElementById","disabled","floorDiff","Math","abs","lift","buttonBox","Diff","offsetTop","offsetHeight","currentTop","top","parseInt","noOfFloors","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eee440e6.chunk.js","sourcesContent":["function Floor(props){\r\n    let lifts = []\r\n    for(let i = 1;i<=props.noOfLifts;i++){\r\n        lifts.push(<div id={`lift${i}`} className=\"lift\" key={i}></div>);\r\n    }\r\n    let root = document.documentElement;\r\n    root.style.setProperty('--floorHeight', `200px`);\r\n    return (\r\n        <div className=\"d-flex flex-row floor\">\r\n            <div className=\"d-flex flex-column-reverse floorBox\">\r\n                <div className=\"container baseLine\"></div>\r\n                <div className=\"d-flex flex-row justify-content-between innerFloorBox\">\r\n                    <div id={`buttonBox${props.floorNo}`} className=\"buttonBox d-flex flex-column-reverse\">\r\n                        {props.first === false && <button className=\"rounded downButton\" id={`downButton${props.floorNo}`} onClick={() => setTimeout(props.downClicked(props.floorNo), 0)}>Down</button>}\r\n                        {props.last === false && <button className=\"rounded upButton\" id={`upButton${props.floorNo}`} onClick={() => setTimeout(props.upClicked(props.floorNo), 0)}>Up</button>}\r\n                    </div>\r\n                    {\r\n                        props.first && <div className=\"d-flex flex-row justify-content-around lifts\">\r\n                            {lifts}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column-reverse floorTitle\">\r\n                <p className=\"title\">Floor {props.floorNo}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Floor;","import { useEffect } from 'react';\r\nimport Floor from './Floor';\r\nfunction LiftContainer(){\r\n    var noOfFloors = 4;\r\n    var noOfLifts = 2;\r\n    var floors = [];\r\n\r\n    var liftRecord = [];\r\n    var liftMoving = [];\r\n\r\n    for(let i = 0; i < noOfLifts; i++){\r\n        liftRecord.push(1);\r\n        liftMoving.push(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    });\r\n\r\n    const downClicked = (floorNo) => {\r\n        if(liftRecord[0] !== floorNo){\r\n            document.getElementById(`downButton${floorNo}`).disabled = true;\r\n            if(liftMoving[0] === true) {\r\n                setTimeout(() => downClicked(floorNo), 100);\r\n            } else {\r\n                liftMoving[0] = true;\r\n                let floorDiff = Math.abs(floorNo - liftRecord[0]);\r\n                let root = document.documentElement;\r\n                root.style.setProperty('--transitionTime', `${floorDiff*2}s`);\r\n                const lift = document.getElementById(`lift1`);\r\n                const buttonBox = document.getElementById(`buttonBox${floorNo}`);\r\n                let Diff = (buttonBox.offsetTop + buttonBox.offsetHeight) - (lift.offsetTop + lift.offsetHeight);\r\n                let currentTop = 0\r\n                if(lift.style.top !== \"\"){\r\n                    currentTop = parseInt(lift.style.top);\r\n                }\r\n                if(currentTop === 0){\r\n                    lift.style.top = `${Diff}px`;\r\n                }else{\r\n                    lift.style.top = `${currentTop + Diff}px`\r\n                }\r\n                setTimeout(() => {\r\n                    liftMoving[0]=false;\r\n                    liftRecord[0] = floorNo;\r\n                    if(floorNo !== noOfFloors) document.getElementById(`upButton${floorNo}`).disabled = false;\r\n                    if(floorNo !== 1) document.getElementById(`downButton${floorNo}`).disabled = false;\r\n                }, floorDiff*2000);   \r\n            }\r\n        }\r\n    };\r\n\r\n    const upClicked = (floorNo) => {\r\n        if(liftRecord[0] !== floorNo){\r\n            document.getElementById(`upButton${floorNo}`).disabled = true;\r\n            if(liftMoving[0] === true) {\r\n                setTimeout(() => upClicked(floorNo), 100);\r\n            } else {\r\n                liftMoving[0] = true;\r\n                let floorDiff = Math.abs(floorNo - liftRecord[0]);\r\n                let root = document.documentElement;\r\n                root.style.setProperty('--transitionTime', `${floorDiff*2}s`);\r\n                const lift = document.getElementById(`lift1`);\r\n                const buttonBox = document.getElementById(`buttonBox${floorNo}`);\r\n                let Diff = (buttonBox.offsetTop + buttonBox.offsetHeight) - (lift.offsetTop + lift.offsetHeight);\r\n                let currentTop = 0\r\n                if(lift.style.top !== \"\"){\r\n                    currentTop = parseInt(lift.style.top);\r\n                }\r\n                if(currentTop === 0){\r\n                    lift.style.top = `${Diff}px`;\r\n                }else{\r\n                    lift.style.top = `${currentTop + Diff}px`\r\n                }\r\n                setTimeout(() => {\r\n                    liftMoving[0]=false;\r\n                    liftRecord[0] = floorNo;\r\n                    if(floorNo !== noOfFloors) document.getElementById(`upButton${floorNo}`).disabled = false;\r\n                    if(floorNo !== 1) document.getElementById(`downButton${floorNo}`).disabled = false;\r\n                }, floorDiff*2000);   \r\n            }\r\n        }\r\n    };\r\n\r\n    for(var i=noOfFloors;i>0;i--){\r\n        floors.push(<Floor downClicked={downClicked} upClicked={upClicked} first={i === 1} last={i === noOfFloors} noOfLifts={noOfLifts} noOfFloors={noOfFloors} key={i} floorNo={i}></Floor>)\r\n    }\r\n    return (\r\n        <div className=\"LiftContainer d-flex align-items-center justify-content-center\">\r\n            <div className=\"innerLiftContainer d-flex flex-column\">\r\n                {floors}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiftContainer;","import './App.css';\r\nimport LiftContainer from './components/LiftContainer';\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid d-flex justify-content-center align-items-center mainContainer\">\r\n      <LiftContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}